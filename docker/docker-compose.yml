# version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: cheapbob-postgres
    environment:
      POSTGRES_USER: cheap
      POSTGRES_PASSWORD: bob
      POSTGRES_DB: cheapbob
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    networks:
      - cheapbob-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cheap -d cheapbob"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: cheapbob-redis
    networks:
      - cheapbob-network
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ../backend
      dockerfile: ../docker/backend/Dockerfile
    container_name: cheapbob-backend
    env_file:
      - ../backend/.env
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - cheapbob-network
    volumes:
      - ../backend:/backend

networks:
  cheapbob-network:
    driver: bridge

volumes:
  postgresql-data:
  redis-data: